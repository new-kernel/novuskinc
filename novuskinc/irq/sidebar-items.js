initSidebarItems({"constant":[["IRQH_FAILED",""],["IRQH_NOT_EXISTENT","This constant is used for unimplemented IRQ handlers."],["IRQH_SUCCESS","When an interrupt is invoked the handler function should return `IRQH_SUCCESS` or `IRQH_FAILED`, these values might be checked on some architectures or IRQ chip drivers"]],"fn":[["DefaultHandler",""],["add_irq",""],["device_irq_handler","The `device_irq_handler` function needs to be defined in the device kernel module, it’s only argument should be the IRQ number that the handler received. Everytime the interrupt handler gets called it will call this function to handle any device specific IRQs."],["device_specific_irqs_init","`device_specific_irqs_init` is used for initializing IRQs that are specific to the device Novusk is running on."],["empty_handler","If an IRQ is not implemented this function can be set as its handler, it returns `IRQH_NOT_EXISTENT`."],["handle_irq",""],["irqchip_init","`irqchip_init` is used to initialize the device’s IRQ chip. The IRQ chip is what controls the IRQs, this function needs to be implemented in the IRQ chip driver."],["irqchip_setup","`irqchip_setup` is used to start setting up the IRQ chip before it’s initialized, it should get called in `setup_arch`. Sometimes it will add some IRQ handlers to “test” them."],["notify_irq","The `notify_irq` function needs to be implemented to tell the IRQ chip that an IRQ has finished"],["set_irqchip","Sets the `IRQCHIP` value in `irq` to `Some(chip)`, this should be called during `irqchip`."]],"struct":[["IrqChip",""],["IrqHandler",""]]});