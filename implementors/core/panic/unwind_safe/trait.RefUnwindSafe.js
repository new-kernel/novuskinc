(function() {var implementors = {};
implementors["novuskinc"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/console/struct.KernelConsole.html\" title=\"struct novuskinc::console::KernelConsole\">KernelConsole</a>","synthetic":true,"types":["novuskinc::console::KernelConsole"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/fb/struct.FrameBuffer.html\" title=\"struct novuskinc::fb::FrameBuffer\">FrameBuffer</a>&lt;'a&gt;","synthetic":true,"types":["novuskinc::fb::FrameBuffer"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/drivers/manager/struct.DeviceDriverManager.html\" title=\"struct novuskinc::drivers::manager::DeviceDriverManager\">DeviceDriverManager</a>","synthetic":true,"types":["novuskinc::drivers::manager::DeviceDriverManager"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/irq/struct.IrqHandler.html\" title=\"struct novuskinc::irq::IrqHandler\">IrqHandler</a>","synthetic":true,"types":["novuskinc::irq::IrqHandler"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/irq/struct.IrqChip.html\" title=\"struct novuskinc::irq::IrqChip\">IrqChip</a>","synthetic":true,"types":["novuskinc::irq::IrqChip"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/keyboard/struct.Keyboard.html\" title=\"struct novuskinc::keyboard::Keyboard\">Keyboard</a>&lt;'a&gt;","synthetic":true,"types":["novuskinc::keyboard::Keyboard"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"novuskinc/kernel/types/enum.KernelFunctionName.html\" title=\"enum novuskinc::kernel::types::KernelFunctionName\">KernelFunctionName</a>","synthetic":true,"types":["novuskinc::kernel::types::KernelFunctionName"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/mb/struct.MailBox.html\" title=\"struct novuskinc::mb::MailBox\">MailBox</a>","synthetic":true,"types":["novuskinc::mb::MailBox"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"novuskinc/module/enum.ModuleType.html\" title=\"enum novuskinc::module::ModuleType\">ModuleType</a>","synthetic":true,"types":["novuskinc::module::ModuleType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"novuskinc/serial/struct.SimpleUart.html\" title=\"struct novuskinc::serial::SimpleUart\">SimpleUart</a>","synthetic":true,"types":["novuskinc::serial::SimpleUart"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()